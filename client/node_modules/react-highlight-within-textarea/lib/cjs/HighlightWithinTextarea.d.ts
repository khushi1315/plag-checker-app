import React from "react";
import { Editor, EditorState, SelectionState } from "draft-js";
import { Selection } from "./Selection";
import { Highlight } from "./types";
export interface HWTAProps {
    value: string;
    onChange?: (nextValue: string, selection?: Selection) => void;
    highlight?: Highlight;
    placeholder?: string;
    selection?: Selection;
    textAlignment?: "left" | "center" | "right";
    textDirectionality?: "LTR" | "RTL" | "NEUTRAL";
    autoCapitalize?: string;
    autoComplete?: string;
    autoCorrect?: string;
    readOnly?: boolean;
    spellCheck?: boolean;
    stripPastedStyles?: boolean;
    editorKey?: string;
    handleReturn?: (e: any, editorState: EditorState) => any;
    handleKeyCommand?: (command: string, editorState: EditorState, eventTimeStamp: number) => any;
    handleBeforeInput?: (chars: string, editorState: EditorState, eventTimeStamp: number) => any;
    handlePastedText?: (text: string, html?: string, editorState?: EditorState) => any;
    handlePastedFiles?: (files: Array<Blob>) => any;
    handleDroppedFiles?: (selection: SelectionState, files: Array<Blob>) => any;
    handleDrop?: (selection: SelectionState, dataTransfer: Object, isInternal: any) => any;
    keyBindingFn?: (e: any) => any;
    onFocus?: (e: any) => void;
    onBlur?: (e: any) => void;
}
declare const HighlightWithinTextarea: React.ForwardRefExoticComponent<HWTAProps & React.RefAttributes<Editor>>;
export default HighlightWithinTextarea;
